{
    "contents" : "---\ntitle: \"Shiny as a platform for collaborative data exploration\"\nauthor: Imre Kocsis (kocsis@quanopt.com), research director, Quanopt Ltd.\n\ndate: Budapest BI Forum 2015, 2015.10.14.\noutput: \n  ioslides_presentation:\n    logo: figs/quan_small.png\n    css: css/my.css\n---\n\n<!--\n###############################################################\n# R markdown script for the static version of the presentation\n# held on Shiny at BI Forum 2015 Budapest\n#\n# Author: Imre Kocsis\n# Date: 2015.10.20.\n#\n# Source and markdown code fall under the Apache License 2.0\n# http://www.apache.org/licenses/LICENSE-2.0.html\n#\n# Graphic assets (including all figures) fall under\n# Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International\n# http://creativecommons.org/licenses/by-nc-nd/4.0/\n#\n# The name \"Quanopt\" and the Quanopt logo are trademarks of\n# Quanopt Inc. (http://www.quanopt.com)\n###############################################################\n-->\n# About us\n\n## The company\n\n- system/process analysis and optimization \"consulting\"\n\n- automotive tooling development\n\n- **R&D spinoff**\n    + founders: professors & and lecturers\n    + [**Dept. of Measurement and Inf. Systems**](http://www.inf.mit.bme.hu) @BME\n    + course highlights: 'Big Data' Analysis Techniques, Cyber-Physical Systems, Intelligent Data Analysis, System Modelling\n\n> - **[Budapest R meetup](http://www.meetup.com/budapest-users-of-r-network/)**: pizza, beer, presentations, 2 organizers\n\n## Data analysis competencies at Quanopt\n<div style=\"width: 100%;\">\n<div style=\"width: 50%; float: left; display: inline-block;padding-right:30px;\">\n**Critical cloud applications**\n\nManufacturing processes\n\nElectronic equipment testing\n\nEffort models for safety-critical software development processes\n\nFraud detection for service provider\n</div>\n<div style=\"width: 40%;display:inline-block;\">\n<img src=\"figs/ds.png\"/>\n</div>\n</div>\n\n## Quanopt and R\nYou touch data - you have to speak some R (and you will see the light, we promise)\n\nBut a **manageable** investment - stats is the hard part, lang is easy\n\n- Main use cases\n    + **Visualization**: R is nigh unbeatable\n    + \"Exploratory Data Analysis\"\n    + Modeling - from descriptive models to [neural networks](http://www.inside-r.org/howto/time-series-analysis-and-order-prediction-r)\n    + Data cleaning and tidying\n\n# Shiny: an overview\n\n## Shiny: a web framework for R\nFrom [RStudio](http://shiny.rstudio.com/)\n<br><br><br>\nWeb page layout and logic: write an R function\n\nServer logic: write an R function\n\nPage updates: reactive network of variables (as in Excel)\n<br><br><br>\nRun locally (RStudio!) / on shiny server / <http://shinyapps.io>\n\n## A simplistic example\n<div id=\"wrap\">\n<div id=\"done\" class=\"smallercode\" style=\"width: 50%; float: left; display: inline-block;\">\nui.R\n```{r, eval=FALSE}\n\nshinyUI(fluidPage(\n  selectInput(\"iris_mvar\",\n    \"Iris property:\",\n    choices=colnames(iris)[1:4]),\n    plotOutput(\"boxplot\")))\n```\nserver.R\n```{r, eval=FALSE}\nshinyServer(\n  function(input,output){\n    output$boxplot <- renderPlot(\n      boxplot(get(input$iris_mvar) ~\n      Species, data=iris))}))\n```\n</div>\n\n<div id=\"dtwo\" style=\"width: 50%; display: inline-block;\">\n\n<div class=\"imagestretch\">\n![Static plot of a simple \"iris\" shiny visualization](static/stat_iris.png)\n</div>\n\n</div>\n</div>\n\n## Reactive programming\n<div class=\"imagestretch\">\n![Reactive programming - by the example of Excel](figs/icacon1.png)\n</div>\nNote: prices have been obfuscated\n\n## Reactive programming\n<div class=\"imagestretch\">\n![Reactive programming - by the example of Excel](figs/icacon2.png)\n</div>\n\n## Reactive programming\n<div class=\"imagestretch\">\n![Reactive programming - by the example of Excel](figs/icacon3.png)\n</div>\n\n## Tweets mentioning \"BudapestBI\" - query with button\n<div class=\"imagestretch\">\n![Static plot of shiny application querying the twitter API](static/stat_tweets.png)\n</div>\n\n## The code - server\n```{r, eval=FALSE}\nfunction(input, output){\n    ###<b>\n    currenttweets <- reactive({\n      a <- NULL\n      if(input$goButton > 0) {\n        a <- bitweeters()}\n      a\n    })\n    ###</b>\n    \n    output$biplot <- renderPlot({\n      p <- qplot(screenname, data=currenttweets(), geom=\"bar\")\n      if(input$rotate) {p <- p + coord_flip()}\n      print(p)\n    })\n```\n\n## And for the sake of completeness\n```{r, eval=FALSE}  \nlibrary(twitteR)\nlibrary(ggplot2)\n    \nbitweeters <- function(){\n  origop <- options(\"httr_oauth_cache\")\n  options(httr_oauth_cache=TRUE)\n  setup_twitter_oauth(conskey,conssecr,actok, acsecr)\n  options(httr_oauth_cache=origop)\n\n  ###<b>  \n  tweets <- searchTwitter(\"BudapestBI\", n = 100)\n  ###</b>\n  \n  scrn <- sapply(tweets, screenName)\n  crtd <- sapply(tweets, created)\n  \n  data.frame(screenname=scrn, created=crtd)\n}\n```\n\n## Invalidation and recomputation\n<div class=\"imagestretch\">\n![Static plot of shiny reactivity trace visualization](static/stat_iframe.png)\n</div>\n\n## Other technicalities\n- you can isolate the usage of a reactive var\n\n- observers for side effects upon changes\n\n- all the usual HTML inputs\n\n- reasonable layout control\n\n- reasonable set of outputs (with renderers) + htmlwidgets\n\n- UI customization: HTML, JavaScript, CSS\n\n- server function can have session parameter\n\n- **important, but not covered: interactive graphics**\n\n## Dynamic UI | or towards intractable hacking\n<div class=\"imagestretch\">\n![Static plot of shiny application with dynamic UI](static/stat_ui.png)\n</div>\n\n## renderUI for uiOutput\n```{r, eval=FALSE}\nfunction(input, output) {\n  output$colselect <- renderUI({\n    if(input$dataSelect == \"cars\") {\n      selectInput(\"colSelect\", \"Select column:\", names(dataframe1))\n    } else {\n      selectInput(\"colSelect\", \"Select column:\", names(dataframe2))\n    }\n  })\n  \n  output$selected <- renderText({\n    paste(\"You have selected: \", input$colSelect)\n  })}\n```\n\nCould be different control types\n\nAnd you can do cascading (**but don't**!)\n\n# Use case #1 | EDA on public cloud benchmark campaigns\n\n## Scenario\nCloud automation & availability project\n\nAn awful lot of perf. benchmark campaigns\n\nTo specify \"the plots\" for the Big BI DW Tool\n\nR/Shiny begun as a band-aid\n\n<img id=\"clz\" src=\"figs/cloud.png\" width=300 align=\"right\">\n\n## Results\n<img id=\"ec2\" src=\"figs/ec2.png\" width=\"100%\">\n\n## Lessons learned\nVery positive reception (Because shiny.)\n\nIn the given context: visualization >> \"statistics\"\n\nFirst usable prototypes: very fast\n  \nPut it in a VPN - and suddenly it's a tool for **collaboration**\n<br><br><br>\n\nDB normalization and evolution massively worked against us\n\nDeep, dynamic tree of DB-driven input controls: **AVOID!**\n\nThe whole thing got a bit sluggish (mostly ggplot2)\n\n# If it works... (?)\n## Similar projects, similar usage\n<div>\n<div style=\"width: 45%; float: left; display: inline-block;padding-right:30px;>\nElectronic equipment testing (BIG data)\n\n**Currently: fault injection on telco cloud applications**\n</div>\n<div style=\"width: 45%; display: inline-block;padding-right:30px;>\n<img src=\"figs/interf.png\" width=\"100%\" align=\"right\">\n</div>\n</div>\n<br><br>\nWeb-based, \"mouse-only\" exploration\n\nSmall teams, project-internal usage; findings recorded separately\n\nSource of all griefs: ID variables\n\n# \"Decision making support\" | Let stakeholders convince themselves\n## Educational cloud: Apache VCL\n<center>\n<img src=\"figs/vcl.png\" height=\"500\"/>\n</center>\n\n## How do students behave?\n<img src=\"figs/profiles.png\" width=\"100%\"/>\n\n## The app\n<div class=\"imagestretch\">\n![Static plot of shiny cloud cost calculator application](static/stat_trezsor.png)\n</div>\n\n# My impression of shiny\n## Shiny: pro's\n- Inside its design envelope: a breeze\n\n- For me this includes no JavaScript\n\n- Almost full R ecosystem\n\n- By far not only \"toy apps\"\n\n- ... But you probably want to stop at \"workgroup applications\"\n\n## Shiny: con's and things to keep in mind\n- No notion of\n    + page flow (single page)\n    + analysis flow\n    + recording & replaying app state\n\n- Keep layout dynamics unsophisticated\n\n- Is the reactive model really enough for you?\n\n- You still develop R (with \"reactivity\") - maintenance?\n\n## Shiny: con's and things to keep in mind\n- Stepping out of the box: R scripting morphs into web development\n\n- Don't confuse it with full-fledged tools (no Watson for free)\n\n- optimal case: your code and data in R; OR you need something from R\n\n- This can be simply ggplot2, mind you\n\n- Server/PaaS pricing\n\n- (Interactive graphics - incl. linked selection & highlighting)\n\n## Final thoughts\n- Fun! :)\n\n- Check it out: <http://shiny.rstudio.com>\n\n- Professional setting: think about the risks (and whys)\n\n- Under development: making objects of the analyzed system first-class citizens in shiny-based visualization\n\n- Currently: too observation-based (interpretation?)\n\n## Thanks\n<br>\n<http://quanopt.com>\n\nDynamic presentation: https://github.com/imrekocsis/biforum2015\n\n<br>\n**Mail**<br>\nkocsis@quanopt.com<br>\nikocsis@mit.bme.hu\n<br>\n<br>\n\n**Special thanks from the team to**\n<br>\nLászló Gönczy, Gergő Kincses, Ágnes Salánki, György Nádudvari\n",
    "created" : 1446464352289.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2429461462",
    "id" : "7E89FE36",
    "lastKnownWriteTime" : 1446478344,
    "path" : "~/Desktop/biforum2015/quanopt_biforum2015_static.Rmd",
    "project_path" : "quanopt_biforum2015_static.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_markdown"
}